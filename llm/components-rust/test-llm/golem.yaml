# Schema for IDEA:
# $schema: https://schema.golem.cloud/app/golem/1.1.1/golem.schema.json
# Schema for vscode-yaml
# yaml-language-server: $schema=https://schema.golem.cloud/app/golem/1.1.1/golem.schema.json

# See https://learn.golem.cloud/docs/app-manifest#field-reference for field reference

components:
  test:llm:
    profiles:
      # DEBUG PROFILES
      openai-debug:
        files:
          - sourcePath: ../../data/cat.png
            targetPath: /data/cat.png
            permissions: read-only
        build:
          - command: cargo component build --no-default-features --features openai
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
          - command: wac plug --plug ../../../components/debug/golem_llm_openai.wasm ../../target/wasm32-wasip1/debug/test_llm.wasm -o ../../target/wasm32-wasip1/debug/test_openai_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
              - ../../../components/debug/golem_llm_openai.wasm
            targets:
              - ../../target/wasm32-wasip1/debug/test_openai_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/debug/test_openai_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_openai_debug.wasm
        clean:
          - src/bindings.rs

      anthropic-debug:
        files:
          - sourcePath: ../../data/cat.png
            targetPath: /data/cat.png
            permissions: read-only
        build:
          - command: cargo component build --no-default-features --features anthropic
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
          - command: wac plug --plug ../../../components/debug/golem_llm_anthropic.wasm ../../target/wasm32-wasip1/debug/test_llm.wasm -o ../../target/wasm32-wasip1/debug/test_anthropic_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
              - ../../../components/debug/golem_llm_anthropic.wasm
            targets:
              - ../../target/wasm32-wasip1/debug/test_anthropic_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/debug/test_anthropic_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_anthropic_debug.wasm
        clean:
          - src/bindings.rs

      grok-debug:
        files:
          - sourcePath: ../../data/cat.png
            targetPath: /data/cat.png
            permissions: read-only
        build:
          - command: cargo component build --no-default-features --features grok
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
          - command: wac plug --plug ../../../components/debug/golem_llm_grok.wasm ../../target/wasm32-wasip1/debug/test_llm.wasm -o ../../target/wasm32-wasip1/debug/test_grok_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
              - ../../../components/debug/golem_llm_grok.wasm
            targets:
              - ../../target/wasm32-wasip1/debug/test_grok_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/debug/test_grok_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_grok_debug.wasm
        clean:
          - src/bindings.rs

      openrouter-debug:
        files:
          - sourcePath: ../../data/cat.png
            targetPath: /data/cat.png
            permissions: read-only
        build:
          - command: cargo component build --no-default-features --features openrouter
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
          - command: wac plug --plug ../../../components/debug/golem_llm_openrouter.wasm ../../target/wasm32-wasip1/debug/test_llm.wasm -o ../../target/wasm32-wasip1/debug/test_openrouter_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
              - ../../../components/debug/golem_llm_openrouter.wasm
            targets:
              - ../../target/wasm32-wasip1/debug/test_openrouter_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/debug/test_openrouter_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_openrouter_debug.wasm
        clean:
          - src/bindings.rs
          
      ollama-debug:
        files:
        - sourcePath: ../../data/cat.png
          targetPath: /data/cat.png
          permissions: read-only
        build:
          - command: cargo component build --no-default-features --features ollama
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
          - command: wac plug --plug ../../../components/debug/golem_llm_ollama.wasm ../../target/wasm32-wasip1/debug/test_llm.wasm -o ../../target/wasm32-wasip1/debug/test_ollama_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/debug/test_llm.wasm
              - ../../../components/debug/golem_llm_ollama.wasm
            targets:
              - ../../target/wasm32-wasip1/debug/test_ollama_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/debug/test_ollama_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_ollama_debug.wasm
        clean:
          - src/bindings.rs

      # RELEASE PROFILES
      openai-release:
        files:
          - sourcePath: ../../data/cat.png
            targetPath: /data/cat.png
            permissions: read-only
        build:
          - command: cargo component build --release --no-default-features --features openai
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
          - command: wac plug --plug ../../../components/release/golem_llm_openai.wasm ../../target/wasm32-wasip1/release/test_llm.wasm -o ../../target/wasm32-wasip1/release/test_openai_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
              - ../../../components/release/golem_llm_openai.wasm
            targets:
              - ../../target/wasm32-wasip1/release/test_openai_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/release/test_openai_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_openai_release.wasm
        clean:
          - src/bindings.rs

      anthropic-release:
        files:
          - sourcePath: ../../data/cat.png
            targetPath: /data/cat.png
            permissions: read-only
        build:
          - command: cargo component build --release --no-default-features --features anthropic
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
          - command: wac plug --plug ../../../components/release/golem_llm_anthropic.wasm ../../target/wasm32-wasip1/release/test_llm.wasm -o ../../target/wasm32-wasip1/release/test_anthropic_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
              - ../../../components/release/golem_llm_anthropic.wasm
            targets:
              - ../../target/wasm32-wasip1/release/test_anthropic_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/release/test_anthropic_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_anthropic_release.wasm
        clean:
          - src/bindings.rs

      grok-release:
        files:
          - sourcePath: ../../data/cat.png
            targetPath: /data/cat.png
            permissions: read-only
        build:
          - command: cargo component build --release --no-default-features --features grok
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
          - command: wac plug --plug ../../../components/release/golem_llm_grok.wasm ../../target/wasm32-wasip1/release/test_llm.wasm -o ../../target/wasm32-wasip1/release/test_grok_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
              - ../../../components/release/golem_llm_grok.wasm
            targets:
              - ../../target/wasm32-wasip1/release/test_grok_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/release/test_grok_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_grok_release.wasm
        clean:
          - src/bindings.rs

      openrouter-release:
        files:
          - sourcePath: ../../data/cat.png
            targetPath: /data/cat.png
            permissions: read-only
        build:
          - command: cargo component build --release --no-default-features --features openrouter
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
          - command: wac plug --plug ../../../components/release/golem_llm_openrouter.wasm ../../target/wasm32-wasip1/release/test_llm.wasm -o ../../target/wasm32-wasip1/release/test_openrouter_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
              - ../../../components/release/golem_llm_openrouter.wasm
            targets:
              - ../../target/wasm32-wasip1/release/test_openrouter_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/release/test_openrouter_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_openrouter_release.wasm
        clean:
          - src/bindings.rs

      ollama-release:
        files:
        - sourcePath: ../../data/cat.png
          targetPath: /data/cat.png
          permissions: read-only
        build:
          - command: cargo component build --release --no-default-features --features ollama
            sources:
              - src
              - wit-generated
              - ../../common-rust
            targets:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
          - command: wac plug --plug ../../../components/release/golem_llm_ollama.wasm ../../target/wasm32-wasip1/release/test_llm.wasm -o ../../target/wasm32-wasip1/release/test_ollama_plugged.wasm
            sources:
              - ../../target/wasm32-wasip1/release/test_llm.wasm
              - ../../../components/release/golem_llm_ollama.wasm
            targets:
              - ../../target/wasm32-wasip1/release/test_ollama_plugged.wasm
        sourceWit: wit
        generatedWit: wit-generated
        componentWasm: ../../target/wasm32-wasip1/release/test_ollama_plugged.wasm
        linkedWasm: ../../golem-temp/components/test_ollama_release.wasm
        clean:
          - src/bindings.rs

    defaultProfile: openai-debug

httpApi:
  definitions:
    llm:
      version: '0.0.1'
      routes:
        - method: GET
          path: /v0.0.1/swagger-llm
          binding:
            type: swagger-ui
        - method: POST
          path: /v0.0.1/test1
          binding:
            type: default
            componentName: test:llm
            response: |
              let worker = instance("test-llm");
              let result = worker.test1();
              {status: 200: u64, body: result}
        - method: OPTIONS
          path: /v0.0.1/test1
          binding:
            type: cors-preflight
            response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
        - method: POST
          path: /v0.0.1/test2
          binding:
            type: default
            componentName: test:llm
            response: |
              let worker = instance("test-llm");
              let result = worker.test2();
              {status: 200: u64, body: result}
        - method: OPTIONS
          path: /v0.0.1/test2
          binding:
            type: cors-preflight
            response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
        - method: POST
          path: /v0.0.1/test3
          binding:
            type: default
            componentName: test:llm
            response: |
              let worker = instance("test-llm");
              let result = worker.test3();
              {status: 200: u64, body: result}
        - method: OPTIONS
          path: /v0.0.1/test3
          binding:
            type: cors-preflight
            response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
        - method: POST
          path: /v0.0.1/test4
          binding:
            type: default
            componentName: test:llm
            response: |
              let worker = instance("test-llm");
              let result = worker.test4();
              {status: 200: u64, body: result}
        - method: OPTIONS
          path: /v0.0.1/test4
          binding:
            type: cors-preflight
            response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
        - method: POST
          path: /v0.0.1/test5
          binding:
            type: default
            componentName: test:llm
            response: |
              let worker = instance("test-llm");
              let result = worker.test5();
              {status: 200: u64, body: result}
        - method: OPTIONS
          path: /v0.0.1/test5
          binding:
            type: cors-preflight
            response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
        - method: POST
          path: /v0.0.1/test6
          binding:
            type: default
            componentName: test:llm
            response: |
              let worker = instance("test-llm");
              let result = worker.test6();
              {status: 200: u64, body: result}
        - method: OPTIONS
          path: /v0.0.1/test6
          binding:
            type: cors-preflight
            response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
        - method: POST
          path: /v0.0.1/test7
          binding:
            type: default
            componentName: test:llm
            response: |
              let worker = instance("test-llm");
              let result = worker.test7();
              {status: 200: u64, body: result}
        - method: OPTIONS
          path: /v0.0.1/test7
          binding:
            type: cors-preflight
            response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  deployments:
    local:
    - host: localhost:9006
      definitions:
       - llm

dependencies:
  test:llm:
    - target: test:helper
      type: wasm-rpc
