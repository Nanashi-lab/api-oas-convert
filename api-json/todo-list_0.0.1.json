{
  "createdAt": "2025-04-04T06:55:14.420215275+00:00",
  "draft": true,
  "id": "todo-list",
  "routes": [
    {
      "binding": {
        "bindingType": "swagger-ui",
        "component": null,
        "corsPreflight": null,
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": null,
        "responseMappingInput": null,
        "responseMappingOutput": null,
        "workerName": null,
        "workerNameInput": null
      },
      "method": "Get",
      "path": "/v0.0.1/swagger-todo",
      "security": null
    },
    {
      "binding": {
        "bindingType": "default",
        "component": {
          "name": "todo-list",
          "version": 0
        },
        "corsPreflight": null,
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": "let input = request.body.input;\nlet result = golem:todolist/api.{add}(input);\n{status: 200: u64, body: result}",
        "responseMappingInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "body",
                  "typ": {
                    "fields": [
                      {
                        "name": "input",
                        "typ": {
                          "fields": [
                            {
                              "name": "title",
                              "typ": {
                                "type": "Str"
                              }
                            },
                            {
                              "name": "priority",
                              "typ": {
                                "cases": [
                                  "low",
                                  "medium",
                                  "high"
                                ],
                                "type": "Enum"
                              }
                            },
                            {
                              "name": "deadline",
                              "typ": {
                                "inner": {
                                  "type": "Str"
                                },
                                "type": "Option"
                              }
                            }
                          ],
                          "type": "Record"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        },
        "responseMappingOutput": {
          "analysed_type": {
            "fields": [
              {
                "name": "body",
                "typ": {
                  "err": {
                    "type": "Str"
                  },
                  "ok": {
                    "fields": [
                      {
                        "name": "id",
                        "typ": {
                          "type": "Str"
                        }
                      },
                      {
                        "name": "title",
                        "typ": {
                          "type": "Str"
                        }
                      },
                      {
                        "name": "priority",
                        "typ": {
                          "cases": [
                            "low",
                            "medium",
                            "high"
                          ],
                          "type": "Enum"
                        }
                      },
                      {
                        "name": "status",
                        "typ": {
                          "cases": [
                            "backlog",
                            "in-progress",
                            "done"
                          ],
                          "type": "Enum"
                        }
                      },
                      {
                        "name": "created-timestamp",
                        "typ": {
                          "type": "S64"
                        }
                      },
                      {
                        "name": "updated-timestamp",
                        "typ": {
                          "type": "S64"
                        }
                      },
                      {
                        "name": "deadline",
                        "typ": {
                          "inner": {
                            "type": "S64"
                          },
                          "type": "Option"
                        }
                      }
                    ],
                    "type": "Record"
                  },
                  "type": "Result"
                }
              },
              {
                "name": "status",
                "typ": {
                  "type": "U64"
                }
              }
            ],
            "type": "Record"
          }
        },
        "workerName": "let user: string = request.path.user;\n\"${user}\"",
        "workerNameInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "path",
                  "typ": {
                    "fields": [
                      {
                        "name": "user",
                        "typ": {
                          "type": "Str"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        }
      },
      "method": "Post",
      "path": "/v0.0.1/{user}/add",
      "security": null
    },
    {
      "binding": {
        "bindingType": "cors-preflight",
        "component": null,
        "corsPreflight": {
          "allowCredentials": null,
          "allowHeaders": "Content-Type, Authorization",
          "allowMethods": "GET, POST, PUT, DELETE, OPTIONS",
          "allowOrigin": "*",
          "exposeHeaders": null,
          "maxAge": null
        },
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": null,
        "responseMappingInput": null,
        "responseMappingOutput": null,
        "workerName": null,
        "workerNameInput": null
      },
      "method": "Options",
      "path": "/v0.0.1/{user}/add",
      "security": null
    },
    {
      "binding": {
        "bindingType": "default",
        "component": {
          "name": "todo-list",
          "version": 0
        },
        "corsPreflight": null,
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": "let result = golem:todolist/api.{count}();\n{status: 200: u64, body: result}",
        "responseMappingInput": {
          "types": {}
        },
        "responseMappingOutput": {
          "analysed_type": {
            "fields": [
              {
                "name": "body",
                "typ": {
                  "type": "U32"
                }
              },
              {
                "name": "status",
                "typ": {
                  "type": "U64"
                }
              }
            ],
            "type": "Record"
          }
        },
        "workerName": "let user: string = request.path.user;\n\"${user}\"",
        "workerNameInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "path",
                  "typ": {
                    "fields": [
                      {
                        "name": "user",
                        "typ": {
                          "type": "Str"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        }
      },
      "method": "Post",
      "path": "/v0.0.1/{user}/count",
      "security": null
    },
    {
      "binding": {
        "bindingType": "cors-preflight",
        "component": null,
        "corsPreflight": {
          "allowCredentials": null,
          "allowHeaders": "Content-Type, Authorization",
          "allowMethods": "GET, POST, PUT, DELETE, OPTIONS",
          "allowOrigin": "*",
          "exposeHeaders": null,
          "maxAge": null
        },
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": null,
        "responseMappingInput": null,
        "responseMappingOutput": null,
        "workerName": null,
        "workerNameInput": null
      },
      "method": "Options",
      "path": "/v0.0.1/{user}/count",
      "security": null
    },
    {
      "binding": {
        "bindingType": "default",
        "component": {
          "name": "todo-list",
          "version": 0
        },
        "corsPreflight": null,
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": "let id = request.body.id;\nlet result = golem:todolist/api.{delete}(id);\n{status: 200: u64, body: result}",
        "responseMappingInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "body",
                  "typ": {
                    "fields": [
                      {
                        "name": "id",
                        "typ": {
                          "type": "Str"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        },
        "responseMappingOutput": {
          "analysed_type": {
            "fields": [
              {
                "name": "body",
                "typ": {
                  "err": {
                    "type": "Str"
                  },
                  "ok": null,
                  "type": "Result"
                }
              },
              {
                "name": "status",
                "typ": {
                  "type": "U64"
                }
              }
            ],
            "type": "Record"
          }
        },
        "workerName": "let user: string = request.path.user;\n\"${user}\"",
        "workerNameInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "path",
                  "typ": {
                    "fields": [
                      {
                        "name": "user",
                        "typ": {
                          "type": "Str"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        }
      },
      "method": "Post",
      "path": "/v0.0.1/{user}/delete",
      "security": null
    },
    {
      "binding": {
        "bindingType": "cors-preflight",
        "component": null,
        "corsPreflight": {
          "allowCredentials": null,
          "allowHeaders": "Content-Type, Authorization",
          "allowMethods": "GET, POST, PUT, DELETE, OPTIONS",
          "allowOrigin": "*",
          "exposeHeaders": null,
          "maxAge": null
        },
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": null,
        "responseMappingInput": null,
        "responseMappingOutput": null,
        "workerName": null,
        "workerNameInput": null
      },
      "method": "Options",
      "path": "/v0.0.1/{user}/delete",
      "security": null
    },
    {
      "binding": {
        "bindingType": "default",
        "component": {
          "name": "todo-list",
          "version": 0
        },
        "corsPreflight": null,
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": "let result = golem:todolist/api.{delete-all}();\n{status: 200: u64, body: \"Success\", headers: {Content-Type: \"application/json\"}}",
        "responseMappingInput": {
          "types": {}
        },
        "responseMappingOutput": {
          "analysed_type": {
            "fields": [
              {
                "name": "body",
                "typ": {
                  "type": "Str"
                }
              },
              {
                "name": "headers",
                "typ": {
                  "fields": [
                    {
                      "name": "Content-Type",
                      "typ": {
                        "type": "Str"
                      }
                    }
                  ],
                  "type": "Record"
                }
              },
              {
                "name": "status",
                "typ": {
                  "type": "U64"
                }
              }
            ],
            "type": "Record"
          }
        },
        "workerName": "let user: string = request.path.user;\n\"${user}\"",
        "workerNameInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "path",
                  "typ": {
                    "fields": [
                      {
                        "name": "user",
                        "typ": {
                          "type": "Str"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        }
      },
      "method": "Post",
      "path": "/v0.0.1/{user}/delete-all",
      "security": null
    },
    {
      "binding": {
        "bindingType": "cors-preflight",
        "component": null,
        "corsPreflight": {
          "allowCredentials": null,
          "allowHeaders": "Content-Type, Authorization",
          "allowMethods": "GET, POST, PUT, DELETE, OPTIONS",
          "allowOrigin": "*",
          "exposeHeaders": null,
          "maxAge": null
        },
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": null,
        "responseMappingInput": null,
        "responseMappingOutput": null,
        "workerName": null,
        "workerNameInput": null
      },
      "method": "Options",
      "path": "/v0.0.1/{user}/delete-all",
      "security": null
    },
    {
      "binding": {
        "bindingType": "default",
        "component": {
          "name": "todo-list",
          "version": 0
        },
        "corsPreflight": null,
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": "let result = golem:todolist/api.{delete-done-items}();\n{body: \"Success\", status: 200: u64}",
        "responseMappingInput": {
          "types": {}
        },
        "responseMappingOutput": {
          "analysed_type": {
            "fields": [
              {
                "name": "body",
                "typ": {
                  "type": "Str"
                }
              },
              {
                "name": "status",
                "typ": {
                  "type": "U64"
                }
              }
            ],
            "type": "Record"
          }
        },
        "workerName": "let user: string = request.path.user;\n\"${user}\"",
        "workerNameInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "path",
                  "typ": {
                    "fields": [
                      {
                        "name": "user",
                        "typ": {
                          "type": "Str"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        }
      },
      "method": "Post",
      "path": "/v0.0.1/{user}/delete-done-items",
      "security": null
    },
    {
      "binding": {
        "bindingType": "cors-preflight",
        "component": null,
        "corsPreflight": {
          "allowCredentials": null,
          "allowHeaders": "Content-Type, Authorization",
          "allowMethods": "GET, POST, PUT, DELETE, OPTIONS",
          "allowOrigin": "*",
          "exposeHeaders": null,
          "maxAge": null
        },
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": null,
        "responseMappingInput": null,
        "responseMappingOutput": null,
        "workerName": null,
        "workerNameInput": null
      },
      "method": "Options",
      "path": "/v0.0.1/{user}/delete-done-items",
      "security": null
    },
    {
      "binding": {
        "bindingType": "default",
        "component": {
          "name": "todo-list",
          "version": 0
        },
        "corsPreflight": null,
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": "let input = request.body.input;\nlet result = golem:todolist/api.{search}(input);\n{status: 200: u64, body: result}",
        "responseMappingInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "body",
                  "typ": {
                    "fields": [
                      {
                        "name": "input",
                        "typ": {
                          "fields": [
                            {
                              "name": "keyword",
                              "typ": {
                                "inner": {
                                  "type": "Str"
                                },
                                "type": "Option"
                              }
                            },
                            {
                              "name": "priority",
                              "typ": {
                                "inner": {
                                  "cases": [
                                    "low",
                                    "medium",
                                    "high"
                                  ],
                                  "type": "Enum"
                                },
                                "type": "Option"
                              }
                            },
                            {
                              "name": "status",
                              "typ": {
                                "inner": {
                                  "cases": [
                                    "backlog",
                                    "in-progress",
                                    "done"
                                  ],
                                  "type": "Enum"
                                },
                                "type": "Option"
                              }
                            },
                            {
                              "name": "deadline",
                              "typ": {
                                "inner": {
                                  "type": "Str"
                                },
                                "type": "Option"
                              }
                            },
                            {
                              "name": "sort",
                              "typ": {
                                "inner": {
                                  "cases": [
                                    "priority",
                                    "deadline"
                                  ],
                                  "type": "Enum"
                                },
                                "type": "Option"
                              }
                            },
                            {
                              "name": "limit",
                              "typ": {
                                "inner": {
                                  "type": "U32"
                                },
                                "type": "Option"
                              }
                            }
                          ],
                          "type": "Record"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        },
        "responseMappingOutput": {
          "analysed_type": {
            "fields": [
              {
                "name": "body",
                "typ": {
                  "err": {
                    "type": "Str"
                  },
                  "ok": {
                    "inner": {
                      "fields": [
                        {
                          "name": "id",
                          "typ": {
                            "type": "Str"
                          }
                        },
                        {
                          "name": "title",
                          "typ": {
                            "type": "Str"
                          }
                        },
                        {
                          "name": "priority",
                          "typ": {
                            "cases": [
                              "low",
                              "medium",
                              "high"
                            ],
                            "type": "Enum"
                          }
                        },
                        {
                          "name": "status",
                          "typ": {
                            "cases": [
                              "backlog",
                              "in-progress",
                              "done"
                            ],
                            "type": "Enum"
                          }
                        },
                        {
                          "name": "created-timestamp",
                          "typ": {
                            "type": "S64"
                          }
                        },
                        {
                          "name": "updated-timestamp",
                          "typ": {
                            "type": "S64"
                          }
                        },
                        {
                          "name": "deadline",
                          "typ": {
                            "inner": {
                              "type": "S64"
                            },
                            "type": "Option"
                          }
                        }
                      ],
                      "type": "Record"
                    },
                    "type": "List"
                  },
                  "type": "Result"
                }
              },
              {
                "name": "status",
                "typ": {
                  "type": "U64"
                }
              }
            ],
            "type": "Record"
          }
        },
        "workerName": "let user: string = request.path.user;\n\"${user}\"",
        "workerNameInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "path",
                  "typ": {
                    "fields": [
                      {
                        "name": "user",
                        "typ": {
                          "type": "Str"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        }
      },
      "method": "Post",
      "path": "/v0.0.1/{user}/search",
      "security": null
    },
    {
      "binding": {
        "bindingType": "cors-preflight",
        "component": null,
        "corsPreflight": {
          "allowCredentials": null,
          "allowHeaders": "Content-Type, Authorization",
          "allowMethods": "GET, POST, PUT, DELETE, OPTIONS",
          "allowOrigin": "*",
          "exposeHeaders": null,
          "maxAge": null
        },
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": null,
        "responseMappingInput": null,
        "responseMappingOutput": null,
        "workerName": null,
        "workerNameInput": null
      },
      "method": "Options",
      "path": "/v0.0.1/{user}/search",
      "security": null
    },
    {
      "binding": {
        "bindingType": "default",
        "component": {
          "name": "todo-list",
          "version": 0
        },
        "corsPreflight": null,
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": "let input = request.body.input;\nlet id = request.body.id;\nlet result = golem:todolist/api.{update}(id, input);\n{status: 200: u64, body: \"Success\"}",
        "responseMappingInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "body",
                  "typ": {
                    "fields": [
                      {
                        "name": "id",
                        "typ": {
                          "type": "Str"
                        }
                      },
                      {
                        "name": "input",
                        "typ": {
                          "fields": [
                            {
                              "name": "title",
                              "typ": {
                                "inner": {
                                  "type": "Str"
                                },
                                "type": "Option"
                              }
                            },
                            {
                              "name": "priority",
                              "typ": {
                                "inner": {
                                  "cases": [
                                    "low",
                                    "medium",
                                    "high"
                                  ],
                                  "type": "Enum"
                                },
                                "type": "Option"
                              }
                            },
                            {
                              "name": "status",
                              "typ": {
                                "inner": {
                                  "cases": [
                                    "backlog",
                                    "in-progress",
                                    "done"
                                  ],
                                  "type": "Enum"
                                },
                                "type": "Option"
                              }
                            },
                            {
                              "name": "deadline",
                              "typ": {
                                "inner": {
                                  "type": "Str"
                                },
                                "type": "Option"
                              }
                            }
                          ],
                          "type": "Record"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        },
        "responseMappingOutput": {
          "analysed_type": {
            "fields": [
              {
                "name": "body",
                "typ": {
                  "type": "Str"
                }
              },
              {
                "name": "status",
                "typ": {
                  "type": "U64"
                }
              }
            ],
            "type": "Record"
          }
        },
        "workerName": "let user: string = request.path.user;\n\"${user}\"",
        "workerNameInput": {
          "types": {
            "request": {
              "fields": [
                {
                  "name": "path",
                  "typ": {
                    "fields": [
                      {
                        "name": "user",
                        "typ": {
                          "type": "Str"
                        }
                      }
                    ],
                    "type": "Record"
                  }
                }
              ],
              "type": "Record"
            }
          }
        }
      },
      "method": "Post",
      "path": "/v0.0.1/{user}/update",
      "security": null
    },
    {
      "binding": {
        "bindingType": "cors-preflight",
        "component": null,
        "corsPreflight": {
          "allowCredentials": null,
          "allowHeaders": "Content-Type, Authorization",
          "allowMethods": "GET, POST, PUT, DELETE, OPTIONS",
          "allowOrigin": "*",
          "exposeHeaders": null,
          "maxAge": null
        },
        "idempotencyKey": null,
        "idempotencyKeyInput": null,
        "response": null,
        "responseMappingInput": null,
        "responseMappingOutput": null,
        "workerName": null,
        "workerNameInput": null
      },
      "method": "Options",
      "path": "/v0.0.1/{user}/update",
      "security": null
    }
  ],
  "version": "0.0.1"
}