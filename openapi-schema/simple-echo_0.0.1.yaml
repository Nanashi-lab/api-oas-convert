openapi: 3.0.0
info:
  title: simple-echo
  version: 0.0.1
paths:
  /v0.0.1/simple-echo:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: swagger-ui
  /v0.0.1/{user}/bool:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: boolean
              required:
              - input
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: boolean
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: simple-echo
        component-version: 0
        response: |-
          let input: bool = request.body.input;
          let result = golem:simpleecho/api.{echo-bool}(input);
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.1/{user}/record:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    minimum: 0
                  name:
                    type: string
                  active:
                    type: boolean
                required:
                - id
                - name
                - active
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: simple-echo
        component-version: 0
        response: |-
          let input = {name: "testbot", id: 30: u32, active: true};
          let result = golem:simpleecho/api.{echo-record}(input);
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.1/{user}/record-2:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: boolean
                id:
                  type: integer
                  format: int32
                  minimum: 0
                name:
                  type: string
              required:
              - active
              - id
              - name
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    minimum: 0
                  name:
                    type: string
                  active:
                    type: boolean
                required:
                - id
                - name
                - active
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: simple-echo
        component-version: 0
        response: |-
          let active: bool = request.body.active;
          let name: string = request.body.name;
          let id: u32 = request.body.id;
          let input = {name: name, id: id, active: active};
          let result = golem:simpleecho/api.{echo-record}(input);
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.1/{user}/record-3:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int32
                      minimum: 0
                    name:
                      type: string
                    active:
                      type: boolean
                  required:
                  - id
                  - name
                  - active
              required:
              - input
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    minimum: 0
                  name:
                    type: string
                  active:
                    type: boolean
                required:
                - id
                - name
                - active
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: simple-echo
        component-version: 0
        response: |-
          let input = request.body.input;
          let result = golem:simpleecho/api.{echo-record}(input);
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.1/{user}/s8:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: integer
                  format: int32
                  minimum: -128
                  maximum: 127
              required:
              - input
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: integer
                format: int32
                minimum: -128
                maximum: 127
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: simple-echo
        component-version: 0
        response: |-
          let input: s8 = request.body.input;
          let result = golem:simpleecho/api.{echo-s8}(input);
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.1/{user}/string:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: string
              required:
              - input
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: simple-echo
        component-version: 0
        response: |-
          let input: string = request.body.input;
          let result = golem:simpleecho/api.{echo-string}(input);
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.1/{user}/string-list:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: simple-echo
        component-version: 0
        response: |-
          let input = ["barbarian", "bard"];
          let result = golem:simpleecho/api.{echo-string-list}(input);
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.1/{user}/string-list-2:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                string:
                  type: array
                  items:
                    type: string
              required:
              - string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: simple-echo
        component-version: 0
        response: |-
          let input = request.body.string;
          let result = golem:simpleecho/api.{echo-string-list}(input);
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
components: {}
x-golem-api-definition-id: simple-echo
x-golem-api-definition-version: 0.0.1
