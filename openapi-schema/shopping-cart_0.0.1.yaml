openapi: 3.0.0
info:
  title: shopping-cart
  version: 0.0.1
paths:
  /v0.0.1/swagger-shopping-cart:
    get:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: swagger-ui
  /v0.0.1/{user}/add-item:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: object
                  properties:
                    product-id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
                      format: float
                    quantity:
                      type: integer
                      format: int32
                      minimum: 0
                  required:
                  - product-id
                  - name
                  - price
                  - quantity
              required:
              - item
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: shopping-cart
        component-version: 0
        response: |-
          let item = request.body.item;
          let result = golem:shoppingcart/api.{add-item}(item);
          {status: 200: u64, body: "Item added"}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/checkout:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: shopping-cart
        component-version: 0
        response: |-
          let result = golem:shoppingcart/api.{checkout}();
          let body = match result {  success(reply) => reply.order-id, error(message) => message } ;
          {status: 200: u64, body: body}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/get-cart-contents:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product-id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
                      format: float
                    quantity:
                      type: integer
                      format: int32
                      minimum: 0
                  required:
                  - product-id
                  - name
                  - price
                  - quantity
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product-id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
                      format: float
                    quantity:
                      type: integer
                      format: int32
                      minimum: 0
                  required:
                  - product-id
                  - name
                  - price
                  - quantity
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: shopping-cart
        component-version: 0
        response: |-
          let result = golem:shoppingcart/api.{get-cart-contents}();
          {status: 200: u64, body: result}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/initialize-cart:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
              required:
              - user
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: shopping-cart
        component-version: 0
        response: |-
          let user: string = request.body.user;
          let result = golem:shoppingcart/api.{initialize-cart}(user);
          {status: 200: u64, body: "User added"}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/remove-item:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                productid:
                  type: string
              required:
              - productid
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: shopping-cart
        component-version: 0
        response: |-
          let productid: string = request.body.productid;
          let result = golem:shoppingcart/api.{remove-item}(productid);
          {status: 200: u64, body: "Product Removed"}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/update-item-quantity:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                productid:
                  type: string
                quantity:
                  type: integer
                  format: int32
                  minimum: 0
              required:
              - productid
              - quantity
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: shopping-cart
        component-version: 0
        response: |-
          let productid: string = request.body.productid;
          let quantity: u32 = request.body.quantity;
          let result = golem:shoppingcart/api.{update-item-quantity}(productid, quantity);
          {status: 200: u64, body: "Item Updated"}
        worker-name: |-
          let user: string = request.path.user;
          "worker-${user}"
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
components: {}
x-golem-api-definition-id: shopping-cart
x-golem-api-definition-version: 0.0.1
