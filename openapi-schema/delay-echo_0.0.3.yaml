openapi: 3.0.0
info:
  title: delay-echo
  version: 0.0.3
paths:
  /v0.0.3/echo-firstclass:
    post:
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
              required:
              - message
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    rand1:
                      type: string
                  required:
                  - rand1
                - type: object
                  properties:
                    rand2:
                      type: string
                  required:
                  - rand2
                - type: object
                  properties:
                    rand3:
                      type: string
                  required:
                  - rand3
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    rand1:
                      type: string
                  required:
                  - rand1
                - type: object
                  properties:
                    rand2:
                      type: string
                  required:
                  - rand2
                - type: object
                  properties:
                    rand3:
                      type: string
                  required:
                  - rand3
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: delay-echo
        component-version: 0
        response: |-
          let worker = instance("worker-static");
          let result = worker.echo-variant(request.body.message);
          {status: 200: u64, body: result}
    options:
      responses:
        default:
          description: OK
          content:
            application/json:
              schema:
                type: object
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.3/echo-query:
    post:
      parameters:
      - in: query
        name: echo
        description: 'Query parameter: echo'
        required: true
        schema:
          type: string
        explode: false
        style: form
        allowEmptyValue: false
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: delay-echo
        component-version: 0
        response: |-
          let worker = instance("worker-static-2");
          let result = worker.echo-variant(request.query.echo);
          let body = match result {  rand1(msg) => msg, rand2(msg) => msg, rand3(msg) => msg } ;
          let status = match result {  rand1(_) => 200: u32, rand2(_) => 200: u32, rand3(_) => 400: u32 } ;
          {status: status, body: body}
        worker-name: '"worker-static"'
    options:
      responses:
        default:
          description: OK
          content:
            application/json:
              schema:
                type: object
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: |-
          {
            Access-Control-Allow-Headers: "Content-Type, Authorization",
            Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS",
            Access-Control-Allow-Origin: "*"
          }
  /v0.0.3/swagger-delay-variant:
    get:
      responses:
        default:
          description: OK
          content:
            application/json:
              schema:
                type: object
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      x-golem-api-gateway-binding:
        binding-type: swagger-ui
components: {}
x-golem-api-definition-id: delay-echo
x-golem-api-definition-version: 0.0.3
