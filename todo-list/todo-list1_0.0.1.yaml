openapi: 3.0.0
info:
  title: todo-list1
  version: 0.0.1
paths:
  /v0.0.1/swagger-todo:
    get:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: swagger-ui
  /v0.0.1/{user}/add:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: object
                  properties:
                    title:
                      type: string
                    priority:
                      type: string
                      enum:
                      - low
                      - medium
                      - high
                    deadline:
                      nullable: true
                      type: string
                  required:
                  - title
                  - priority
              required:
              - input
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    ok:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        priority:
                          type: string
                          enum:
                          - low
                          - medium
                          - high
                        status:
                          type: string
                          enum:
                          - backlog
                          - in-progress
                          - done
                        created-timestamp:
                          type: integer
                          format: int64
                        updated-timestamp:
                          type: integer
                          format: int64
                        deadline:
                          nullable: true
                          type: integer
                          format: int64
                      required:
                      - id
                      - title
                      - priority
                      - status
                      - created-timestamp
                      - updated-timestamp
                  required:
                  - ok
                - type: object
                  properties:
                    err:
                      type: string
                  required:
                  - err
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    ok:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        priority:
                          type: string
                          enum:
                          - low
                          - medium
                          - high
                        status:
                          type: string
                          enum:
                          - backlog
                          - in-progress
                          - done
                        created-timestamp:
                          type: integer
                          format: int64
                        updated-timestamp:
                          type: integer
                          format: int64
                        deadline:
                          nullable: true
                          type: integer
                          format: int64
                      required:
                      - id
                      - title
                      - priority
                      - status
                      - created-timestamp
                      - updated-timestamp
                  required:
                  - ok
                - type: object
                  properties:
                    err:
                      type: string
                  required:
                  - err
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: swagger:todo-list
        component-version: 0
        response: |-
          let user: string = request.path.user;
          let worker = instance("todo-${user}");
          let input = request.body.input;
          let result = worker.add(input);
          {status: 200: u64, body: result}
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/count:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: integer
                format: int32
                minimum: 0
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: integer
                format: int32
                minimum: 0
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: swagger:todo-list
        component-version: 0
        response: |-
          let user: string = request.path.user;
          let worker = instance("todo-${user}");
          let result = worker.count();
          {status: 200: u64, body: result}
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/delete:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
              required:
              - id
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    ok:
                      type: string
                  required:
                  - ok
                - type: object
                  properties:
                    err:
                      type: string
                  required:
                  - err
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    ok:
                      type: string
                  required:
                  - ok
                - type: object
                  properties:
                    err:
                      type: string
                  required:
                  - err
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: swagger:todo-list
        component-version: 0
        response: |-
          let user: string = request.path.user;
          let worker = instance("todo-${user}");
          let id = request.body.id;
          let result = worker.delete(id);
          {status: 200: u64, body: result}
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/delete-all:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        default:
          description: Created
        '201':
          description: Created
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: swagger:todo-list
        component-version: 0
        response: |-
          let user: string = request.path.user;
          let worker = instance("todo-${user}");
          let result = worker.delete-all();
          {status: 200: u64, headers: {Content-Type: "application/json"}}
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/delete-done-items:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: swagger:todo-list
        component-version: 0
        response: |-
          let user: string = request.path.user;
          let worker = instance("todo-${user}");
          let result = worker.delete-done-items();
          {body: "Success", status: 200: u64}
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/search:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  type: object
                  properties:
                    keyword:
                      nullable: true
                      type: string
                    priority:
                      nullable: true
                      type: string
                      enum:
                      - low
                      - medium
                      - high
                    status:
                      nullable: true
                      type: string
                      enum:
                      - backlog
                      - in-progress
                      - done
                    deadline:
                      nullable: true
                      type: string
                    sort:
                      nullable: true
                      type: string
                      enum:
                      - priority
                      - deadline
                    limit:
                      nullable: true
                      type: integer
                      format: int32
                      minimum: 0
              required:
              - input
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    ok:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          priority:
                            type: string
                            enum:
                            - low
                            - medium
                            - high
                          status:
                            type: string
                            enum:
                            - backlog
                            - in-progress
                            - done
                          created-timestamp:
                            type: integer
                            format: int64
                          updated-timestamp:
                            type: integer
                            format: int64
                          deadline:
                            nullable: true
                            type: integer
                            format: int64
                        required:
                        - id
                        - title
                        - priority
                        - status
                        - created-timestamp
                        - updated-timestamp
                  required:
                  - ok
                - type: object
                  properties:
                    err:
                      type: string
                  required:
                  - err
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  properties:
                    ok:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          priority:
                            type: string
                            enum:
                            - low
                            - medium
                            - high
                          status:
                            type: string
                            enum:
                            - backlog
                            - in-progress
                            - done
                          created-timestamp:
                            type: integer
                            format: int64
                          updated-timestamp:
                            type: integer
                            format: int64
                          deadline:
                            nullable: true
                            type: integer
                            format: int64
                        required:
                        - id
                        - title
                        - priority
                        - status
                        - created-timestamp
                        - updated-timestamp
                  required:
                  - ok
                - type: object
                  properties:
                    err:
                      type: string
                  required:
                  - err
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: swagger:todo-list
        component-version: 0
        response: |-
          let user: string = request.path.user;
          let worker = instance("todo-${user}");
          let input = request.body.input;
          let result = worker.search(input);
          {status: 200: u64, body: result}
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
  /v0.0.1/{user}/update:
    post:
      parameters:
      - in: path
        name: user
        description: 'Path parameter: user'
        required: true
        schema:
          type: string
        explode: false
        style: simple
      requestBody:
        description: Request payload
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                input:
                  type: object
                  properties:
                    title:
                      nullable: true
                      type: string
                    priority:
                      nullable: true
                      type: string
                      enum:
                      - low
                      - medium
                      - high
                    status:
                      nullable: true
                      type: string
                      enum:
                      - backlog
                      - in-progress
                      - done
                    deadline:
                      nullable: true
                      type: string
              required:
              - id
              - input
        required: true
      responses:
        default:
          description: Created
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
      x-golem-api-gateway-binding:
        binding-type: default
        component-name: swagger:todo-list
        component-version: 0
        response: |-
          let user: string = request.path.user;
          let worker = instance("todo-${user}");
          let input = request.body.input;
          let id = request.body.id;
          let result = worker.update(id, input);
          {status: 200: u64, body: "Success"}
    options:
      responses:
        default:
          description: OK
        '200':
          description: OK
      x-golem-api-gateway-binding:
        binding-type: cors-preflight
        response: '{access-control-allow-origin: "*", access-control-allow-methods: "GET, POST, PUT, DELETE, OPTIONS", access-control-allow-headers: "Content-Type, Authorization"}'
components: {}
x-golem-api-definition-id: todo-list1
x-golem-api-definition-version: 0.0.1
